{"version":3,"file":"angular-rave.umd.js.map","sources":["ng://angular-rave/lib/angular-rave.component.ts","ng://angular-rave/lib/angular-rave.directive.ts","ng://angular-rave/lib/rave-options.ts","ng://angular-rave/lib/angular-rave.module.ts"],"sourcesContent":["import { Component, OnInit, EventEmitter, Input, Output } from '@angular/core';\nimport { PrivateRaveOptions } from './rave-options';\n\ninterface MyWindow extends Window {\n  getpaidSetup: (raveOptions: Partial<PrivateRaveOptions>) => void;\n}\n\ndeclare var window: MyWindow;\n\n@Component({\n  selector: 'angular-rave',\n  template: `<ng-content></ng-content>`\n})\n\nexport class AngularRaveComponent implements OnInit {\n  @Input() PBFPubKey: string;\n  @Input() integrity_hash: string;\n  @Input() txref: string;\n  @Input() payment_method: string;\n  @Input() amount: number;\n  @Input() currency: string;\n  @Input() country: string;\n  @Input() customer_email: string;\n  @Input() customer_phone: string;\n  @Input() customer_firstname: string;\n  @Input() customer_lastname: string;\n  @Input() subaccount: { id: string, transaction_split_ratio: string }[];\n  @Input() pay_button_text: string;\n  @Input() custom_title: string;\n  @Input() custom_description: string;\n  @Input() redirect_url: string;\n  @Input() custom_logo: string;\n  @Input() meta: any;\n  @Input() raveOptions: Partial<PrivateRaveOptions>;\n  @Output() onclose: EventEmitter<void> = new EventEmitter<void>();\n  @Output() callback: EventEmitter<Object> = new EventEmitter<Object>();\n  private _raveOptions: Partial<PrivateRaveOptions> = {};\n\n  constructor() { }\n\n  pay() {\n    if (typeof window.getpaidSetup !== 'function') {\n      return console.error('ANGULAR-RAVE: Please verify that you imported rave\\'s script into your index.html');\n    }\n    // If the raveoptions Input is present then use it\n    if (this.raveOptions && Object.keys(this.raveOptions).length > 3) {\n      if (this.validateOptions()) {\n        window.getpaidSetup(this.raveOptions);\n      }\n    } else {\n      if (this.validateInput()) {\n        this.insertRaveOptions();\n        window.getpaidSetup(this._raveOptions);\n      }\n    }\n  }\n\n  insertRaveOptions() {\n    if (this.amount) { this._raveOptions.amount = this.amount; }\n    if (this.PBFPubKey) { this._raveOptions.PBFPubKey = this.PBFPubKey; }\n    if (this.payment_method) { this._raveOptions.payment_method = this.payment_method; }\n    if (this.redirect_url) { this._raveOptions.redirect_url = this.redirect_url; }\n    if (this.integrity_hash) { this._raveOptions.integrity_hash = this.integrity_hash; }\n    if (this.pay_button_text) { this._raveOptions.pay_button_text = this.pay_button_text; }\n    if (this.country) { this._raveOptions.country = this.country; }\n    if (this.currency) { this._raveOptions.currency = this.currency; }\n    if (this.custom_description) { this._raveOptions.custom_description = this.custom_description; }\n    if (this.customer_email) { this._raveOptions.customer_email = this.customer_email; }\n    if (this.custom_logo) { this._raveOptions.custom_logo = this.custom_logo; }\n    if (this.custom_title) { this._raveOptions.custom_title = this.custom_title; }\n    if (this.customer_firstname) { this._raveOptions.customer_firstname = this.customer_firstname; }\n    if (this.subaccount) { this._raveOptions.subaccount = this.subaccount; }\n    if (this.customer_lastname) { this._raveOptions.customer_lastname = this.customer_lastname; }\n    if (this.txref) { this._raveOptions.txref = this.txref; }\n    if (this.customer_phone) { this._raveOptions.customer_phone = this.customer_phone; }\n    if (this.onclose) { this._raveOptions.onclose = () => this.onclose.emit(); }\n    if (this.callback) { this._raveOptions.callback = (res) => this.onclose.emit(res); }\n  }\n\n  validateOptions() {\n    if (!this.raveOptions.PBFPubKey) { return console.error('ANGULAR-RAVE: Merchant public key is required'); }\n    if (!(this.raveOptions.customer_email || this.raveOptions.customer_phone)) {\n      return console.error('ANGULAR-RAVE: Customer email or phone number is required');\n    }\n    if (!this.raveOptions.txref) { return console.error('ANGULAR-RAVE: A unique transaction reference is required'); }\n    if (!this.raveOptions.amount) { return console.error('ANGULAR-RAVE: Amount to charge is required'); }\n    if (!this.callback.observers.length) { return console.error('ANGULAR-RAVE: You should attach to callback to verify your transaction'); }\n    if (this.onclose.observers.length) { this.raveOptions.onclose = () => this.onclose.emit(); }\n    this.raveOptions.callback = res => this.callback.emit(res);\n    return true;\n  }\n\n  validateInput() {\n    if (!this.PBFPubKey) { return console.error('ANGULAR-RAVE: Merchant public key is required'); }\n    if (!(this.customer_email || this.customer_phone)) { return console.error('ANGULAR-RAVE: Customer email or phone number is required'); }\n    if (!this.txref) { return console.error('ANGULAR-RAVE: A unique transaction reference is required'); }\n    if (!this.amount) { return console.error('ANGULAR-RAVE: Amount to charge is required'); }\n    if (!this.callback) { return console.error('ANGULAR-RAVE: You should attach to callback to verify your transaction'); }\n    return true;\n  }\n\n  ngOnInit() {\n    this.pay();\n  }\n}\n","import { Directive, Input, Output, HostListener, EventEmitter } from '@angular/core';\n\nimport { PrivateRaveOptions } from './rave-options';\n\ninterface MyWindow extends Window {\n  getpaidSetup: (raveOptions: Partial<PrivateRaveOptions>) => void;\n}\n\ndeclare var window: MyWindow;\n\n@Directive({\n  selector: '[angular-rave]'\n})\nexport class AngularRaveDirective {\n  @Input() PBFPubKey: string;\n  @Input() integrity_hash: string;\n  @Input() txref: string;\n  @Input() payment_method: string;\n  @Input() amount: number;\n  @Input() currency: string;\n  @Input() country: string;\n  @Input() customer_email: string;\n  @Input() customer_phone: string;\n  @Input() customer_firstname: string;\n  @Input() customer_lastname: string;\n  @Input() pay_button_text: string;\n  @Input() custom_title: string;\n  @Input() subaccount: { id: string, transaction_split_ratio: string }[];\n  @Input() custom_description: string;\n  @Input() redirect_url: string;\n  @Input() custom_logo: string;\n  @Input() meta: any;\n  @Input() raveOptions: Partial<PrivateRaveOptions> = {};\n  @Output() onclose: EventEmitter<void> = new EventEmitter<void>();\n  @Output() callback: EventEmitter<any> = new EventEmitter<any>();\n  private _raveOptions: Partial<PrivateRaveOptions> = {};\n\n  constructor() { }\n\n  @HostListener('click')\n  buttonClick() {\n    this.pay();\n  }\n\n  pay() {\n    if (typeof window.getpaidSetup !== 'function') {\n      return console.error('ANGULAR-RAVE: Please verify that you imported rave\\'s script into your index.html');\n    }\n    // If the raveoptions Input is present then use\n    if (this.raveOptions && Object.keys(this.raveOptions).length > 3) {\n      if (this.validateOptions()) {\n        window.getpaidSetup(this.raveOptions);\n      }\n    } else {\n      if (this.validateInput()) {\n        this.insertRaveOptions();\n        window.getpaidSetup(this._raveOptions);\n      }\n    }\n  }\n\n  insertRaveOptions() {\n    if (this.amount) { this._raveOptions.amount = this.amount; }\n    if (this.PBFPubKey) { this._raveOptions.PBFPubKey = this.PBFPubKey; }\n    if (this.payment_method) { this._raveOptions.payment_method = this.payment_method; }\n    if (this.redirect_url) { this._raveOptions.redirect_url = this.redirect_url; }\n    if (this.integrity_hash) { this._raveOptions.integrity_hash = this.integrity_hash; }\n    if (this.pay_button_text) { this._raveOptions.pay_button_text = this.pay_button_text; }\n    if (this.country) { this._raveOptions.country = this.country; }\n    if (this.currency) { this._raveOptions.currency = this.currency; }\n    if (this.custom_description) { this._raveOptions.custom_description = this.custom_description; }\n    if (this.customer_email) { this._raveOptions.customer_email = this.customer_email; }\n    if (this.custom_logo) { this._raveOptions.custom_logo = this.custom_logo; }\n    if (this.custom_title) { this._raveOptions.custom_title = this.custom_title; }\n    if (this.customer_firstname) { this._raveOptions.customer_firstname = this.customer_firstname; }\n    if (this.customer_lastname) { this._raveOptions.customer_lastname = this.customer_lastname; }\n    if (this.subaccount) { this._raveOptions.subaccount = this.subaccount; }\n    if (this.customer_phone) { this._raveOptions.customer_phone = this.customer_phone; }\n    if (this.txref) { this._raveOptions.txref = this.txref; }\n    if (this.onclose) { this._raveOptions.onclose = () => this.onclose.emit(); }\n    if (this.callback) { this._raveOptions.callback = res => this.callback.emit(res); }\n  }\n\n  validateOptions() {\n    if (!this.raveOptions.PBFPubKey) { return console.error('ANGULAR-RAVE: Merchant public key is required'); }\n    if (!(this.raveOptions.customer_email || this.raveOptions.customer_phone)) {\n      return console.error('ANGULAR-RAVE: Customer email or phone number is required');\n    }\n    if (!this.raveOptions.txref) { return console.error('ANGULAR-RAVE: A unique transaction reference is required'); }\n    if (!this.raveOptions.amount) { return console.error('ANGULAR-RAVE: Amount to charge is required'); }\n    if (!this.callback.observers.length) { return console.error('ANGULAR-RAVE: You should attach to callback to verify your transaction'); }\n    if (this.onclose.observers.length) { this.raveOptions.onclose = () => this.onclose.emit(); }\n    this.raveOptions.callback = res => this.callback.emit(res);\n    return true;\n  }\n\n  validateInput() {\n    if (!this.PBFPubKey) { return console.error('ANGULAR-RAVE: Merchant public key is required'); }\n    if (!(this.customer_email || this.customer_phone)) { return console.error('ANGULAR-RAVE: Customer email or phone number is required'); }\n    if (!this.txref) { return console.error('ANGULAR-RAVE: A unique transaction reference is required'); }\n    if (!this.amount) { return console.error('ANGULAR-RAVE: Amount to charge is required'); }\n    if (!this.callback) { return console.error('ANGULAR-RAVE: You should attach to callback to verify your transaction'); }\n    return true;\n  }\n\n}\n","export class RaveOptions {\n  /**\n   * Your merchant public key provided when you create a button\n   */\n  PBFPubKey: string;\n  /**\n   * Email of the customer\n   */\n  customer_email?: string;\n  /**\n   * Firstname of the customer\n   */\n  customer_firstname?: string;\n  /**\n   * firstname of the customer\n   */\n  customer_lastname?: string;\n  /**\n   * Text to be displayed as a short modal description\n   */\n  custom_description?: string;\n  /**\n   * Link to your custom image\n   */\n  custom_logo?: string;\n  /**\n   * Text to be displayed as the title of the payment modal\n   */\n  custom_title?: string;\n  /**\n   * Amount to charge\n   */\n  amount: number;\n  /**\n   * phone number of the customer\n   */\n  customer_phone?: string;\n  /**\n   * URL to redirect to when transaction is completed.\n   */\n  redirect_url?: string;\n  /**\n   * route country. Default NG\n   */\n  country?: string;\n  /**\n   * currency to charge the card in. Default \"NGN\"\n   */\n  currency?: string;\n  /**\n   * This allows you select the payment option you want for your users, possible values are card, account or both\n   */\n  payment_method?: string;\n  /**\n   * Text to be displayed on the Rave Checkout Button\n   */\n  pay_button_text?: string;\n  /**\n   * Unique transaction reference provided by the merchant\n   */\n  txref: string;\n  /**\n   * This is a sha256 hash of your getpaidSetup values, it is used for passing secured values to the payment gateway\n   */\n  integrity_hash?: string;\n  /**\n   * The value to be passed for this is 1. This is useful when customer is using an opera browser, it\n   * would load the payment modal on a new page.\n   */\n  hosted_payment?: 1;\n  /**\n   * Any other custom data you wish to pass.\n   */\n  meta?: any;\n  /**\n   * Subaccounts to split payment with\n   * https://developer.flutterwave.com/v2.0/docs/split-payment\n   */\n  subaccount?: { id: string, transaction_split_ratio: string }[];\n}\n\nexport class PrivateRaveOptions extends RaveOptions {\n  /**\n   * A function to be called on successful card charge. Userâs can always be redirected to a successful or\n   * failed page supplied by the merchant here based on response\n   * @param response?: The server response\n   */\n  callback: (response?: any) => void;\n  /**\n   * A function to be called when the pay modal is closed.\n   */\n  onclose: () => void;\n}\n","import { NgModule } from '@angular/core';\n\nimport { AngularRaveComponent } from './angular-rave.component';\nimport { AngularRaveDirective } from './angular-rave.directive';\n\n@NgModule({\n  imports: [],\n  exports: [AngularRaveComponent, AngularRaveDirective],\n  declarations: [AngularRaveComponent, AngularRaveDirective],\n  providers: [],\n})\nexport class AngularRaveModule { }\n"],"names":["EventEmitter","Component","Input","Output","Directive","HostListener","tslib_1.__extends","NgModule"],"mappings":";;;;;;;;;;AAAA;QAsCE;2BAJwC,IAAIA,iBAAY,EAAQ;4BACrB,IAAIA,iBAAY,EAAU;gCACjB,EAAE;SAErC;;;;QAEjB,kCAAG;;;YAAH;gBACE,IAAI,OAAO,MAAM,CAAC,YAAY,KAAK,UAAU,EAAE;oBAC7C,OAAO,OAAO,CAAC,KAAK,CAAC,mFAAmF,CAAC,CAAC;iBAC3G;;gBAED,IAAI,IAAI,CAAC,WAAW,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;oBAChE,IAAI,IAAI,CAAC,eAAe,EAAE,EAAE;wBAC1B,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;qBACvC;iBACF;qBAAM;oBACL,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;wBACxB,IAAI,CAAC,iBAAiB,EAAE,CAAC;wBACzB,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;qBACxC;iBACF;aACF;;;;QAED,gDAAiB;;;YAAjB;gBAAA,iBAoBC;gBAnBC,IAAI,IAAI,CAAC,MAAM,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;iBAAE;gBAC5D,IAAI,IAAI,CAAC,SAAS,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;iBAAE;gBACrE,IAAI,IAAI,CAAC,cAAc,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;iBAAE;gBACpF,IAAI,IAAI,CAAC,YAAY,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;iBAAE;gBAC9E,IAAI,IAAI,CAAC,cAAc,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;iBAAE;gBACpF,IAAI,IAAI,CAAC,eAAe,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;iBAAE;gBACvF,IAAI,IAAI,CAAC,OAAO,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;iBAAE;gBAC/D,IAAI,IAAI,CAAC,QAAQ,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;iBAAE;gBAClE,IAAI,IAAI,CAAC,kBAAkB,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;iBAAE;gBAChG,IAAI,IAAI,CAAC,cAAc,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;iBAAE;gBACpF,IAAI,IAAI,CAAC,WAAW,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;iBAAE;gBAC3E,IAAI,IAAI,CAAC,YAAY,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;iBAAE;gBAC9E,IAAI,IAAI,CAAC,kBAAkB,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;iBAAE;gBAChG,IAAI,IAAI,CAAC,UAAU,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;iBAAE;gBACxE,IAAI,IAAI,CAAC,iBAAiB,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;iBAAE;gBAC7F,IAAI,IAAI,CAAC,KAAK,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;iBAAE;gBACzD,IAAI,IAAI,CAAC,cAAc,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;iBAAE;gBACpF,IAAI,IAAI,CAAC,OAAO,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,cAAM,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,GAAA,CAAC;iBAAE;gBAC5E,IAAI,IAAI,CAAC,QAAQ,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,UAAC,GAAG,IAAK,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,GAAA,CAAC;iBAAE;aACrF;;;;QAED,8CAAe;;;YAAf;gBAAA,iBAWC;gBAVC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE;oBAAE,OAAO,OAAO,CAAC,KAAK,CAAC,+CAA+C,CAAC,CAAC;iBAAE;gBAC3G,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,cAAc,IAAI,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,EAAE;oBACzE,OAAO,OAAO,CAAC,KAAK,CAAC,0DAA0D,CAAC,CAAC;iBAClF;gBACD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;oBAAE,OAAO,OAAO,CAAC,KAAK,CAAC,0DAA0D,CAAC,CAAC;iBAAE;gBAClH,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;oBAAE,OAAO,OAAO,CAAC,KAAK,CAAC,4CAA4C,CAAC,CAAC;iBAAE;gBACrG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,EAAE;oBAAE,OAAO,OAAO,CAAC,KAAK,CAAC,wEAAwE,CAAC,CAAC;iBAAE;gBACxI,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE;oBAAE,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,cAAM,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,GAAA,CAAC;iBAAE;gBAC5F,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,UAAA,GAAG,IAAI,OAAA,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAA,CAAC;gBAC3D,OAAO,IAAI,CAAC;aACb;;;;QAED,4CAAa;;;YAAb;gBACE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;oBAAE,OAAO,OAAO,CAAC,KAAK,CAAC,+CAA+C,CAAC,CAAC;iBAAE;gBAC/F,IAAI,EAAE,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,EAAE;oBAAE,OAAO,OAAO,CAAC,KAAK,CAAC,0DAA0D,CAAC,CAAC;iBAAE;gBACxI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;oBAAE,OAAO,OAAO,CAAC,KAAK,CAAC,0DAA0D,CAAC,CAAC;iBAAE;gBACtG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;oBAAE,OAAO,OAAO,CAAC,KAAK,CAAC,4CAA4C,CAAC,CAAC;iBAAE;gBACzF,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;oBAAE,OAAO,OAAO,CAAC,KAAK,CAAC,wEAAwE,CAAC,CAAC;iBAAE;gBACvH,OAAO,IAAI,CAAC;aACb;;;;QAED,uCAAQ;;;YAAR;gBACE,IAAI,CAAC,GAAG,EAAE,CAAC;aACZ;;oBA9FFC,cAAS,SAAC;wBACT,QAAQ,EAAE,cAAc;wBACxB,QAAQ,EAAE,2BAA2B;qBACtC;;;;;kCAGEC,UAAK;uCACLA,UAAK;8BACLA,UAAK;uCACLA,UAAK;+BACLA,UAAK;iCACLA,UAAK;gCACLA,UAAK;uCACLA,UAAK;uCACLA,UAAK;2CACLA,UAAK;0CACLA,UAAK;mCACLA,UAAK;wCACLA,UAAK;qCACLA,UAAK;2CACLA,UAAK;qCACLA,UAAK;oCACLA,UAAK;6BACLA,UAAK;oCACLA,UAAK;gCACLC,WAAM;iCACNA,WAAM;;mCAnCT;;;;;;;ACAA;QAqCE;+BALoD,EAAE;2BACd,IAAIH,iBAAY,EAAQ;4BACxB,IAAIA,iBAAY,EAAO;gCACX,EAAE;SAErC;;;;QAGjB,0CAAW;;;;gBACT,IAAI,CAAC,GAAG,EAAE,CAAC;;;;;QAGb,kCAAG;;;YAAH;gBACE,IAAI,OAAO,MAAM,CAAC,YAAY,KAAK,UAAU,EAAE;oBAC7C,OAAO,OAAO,CAAC,KAAK,CAAC,mFAAmF,CAAC,CAAC;iBAC3G;;gBAED,IAAI,IAAI,CAAC,WAAW,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;oBAChE,IAAI,IAAI,CAAC,eAAe,EAAE,EAAE;wBAC1B,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;qBACvC;iBACF;qBAAM;oBACL,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;wBACxB,IAAI,CAAC,iBAAiB,EAAE,CAAC;wBACzB,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;qBACxC;iBACF;aACF;;;;QAED,gDAAiB;;;YAAjB;gBAAA,iBAoBC;gBAnBC,IAAI,IAAI,CAAC,MAAM,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;iBAAE;gBAC5D,IAAI,IAAI,CAAC,SAAS,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;iBAAE;gBACrE,IAAI,IAAI,CAAC,cAAc,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;iBAAE;gBACpF,IAAI,IAAI,CAAC,YAAY,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;iBAAE;gBAC9E,IAAI,IAAI,CAAC,cAAc,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;iBAAE;gBACpF,IAAI,IAAI,CAAC,eAAe,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;iBAAE;gBACvF,IAAI,IAAI,CAAC,OAAO,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;iBAAE;gBAC/D,IAAI,IAAI,CAAC,QAAQ,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;iBAAE;gBAClE,IAAI,IAAI,CAAC,kBAAkB,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;iBAAE;gBAChG,IAAI,IAAI,CAAC,cAAc,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;iBAAE;gBACpF,IAAI,IAAI,CAAC,WAAW,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;iBAAE;gBAC3E,IAAI,IAAI,CAAC,YAAY,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;iBAAE;gBAC9E,IAAI,IAAI,CAAC,kBAAkB,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;iBAAE;gBAChG,IAAI,IAAI,CAAC,iBAAiB,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;iBAAE;gBAC7F,IAAI,IAAI,CAAC,UAAU,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;iBAAE;gBACxE,IAAI,IAAI,CAAC,cAAc,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;iBAAE;gBACpF,IAAI,IAAI,CAAC,KAAK,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;iBAAE;gBACzD,IAAI,IAAI,CAAC,OAAO,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,cAAM,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,GAAA,CAAC;iBAAE;gBAC5E,IAAI,IAAI,CAAC,QAAQ,EAAE;oBAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,UAAA,GAAG,IAAI,OAAA,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAA,CAAC;iBAAE;aACpF;;;;QAED,8CAAe;;;YAAf;gBAAA,iBAWC;gBAVC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE;oBAAE,OAAO,OAAO,CAAC,KAAK,CAAC,+CAA+C,CAAC,CAAC;iBAAE;gBAC3G,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,cAAc,IAAI,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,EAAE;oBACzE,OAAO,OAAO,CAAC,KAAK,CAAC,0DAA0D,CAAC,CAAC;iBAClF;gBACD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;oBAAE,OAAO,OAAO,CAAC,KAAK,CAAC,0DAA0D,CAAC,CAAC;iBAAE;gBAClH,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;oBAAE,OAAO,OAAO,CAAC,KAAK,CAAC,4CAA4C,CAAC,CAAC;iBAAE;gBACrG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,EAAE;oBAAE,OAAO,OAAO,CAAC,KAAK,CAAC,wEAAwE,CAAC,CAAC;iBAAE;gBACxI,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE;oBAAE,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,cAAM,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,GAAA,CAAC;iBAAE;gBAC5F,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,UAAA,GAAG,IAAI,OAAA,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAA,CAAC;gBAC3D,OAAO,IAAI,CAAC;aACb;;;;QAED,4CAAa;;;YAAb;gBACE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;oBAAE,OAAO,OAAO,CAAC,KAAK,CAAC,+CAA+C,CAAC,CAAC;iBAAE;gBAC/F,IAAI,EAAE,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,EAAE;oBAAE,OAAO,OAAO,CAAC,KAAK,CAAC,0DAA0D,CAAC,CAAC;iBAAE;gBACxI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;oBAAE,OAAO,OAAO,CAAC,KAAK,CAAC,0DAA0D,CAAC,CAAC;iBAAE;gBACtG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;oBAAE,OAAO,OAAO,CAAC,KAAK,CAAC,4CAA4C,CAAC,CAAC;iBAAE;gBACzF,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;oBAAE,OAAO,OAAO,CAAC,KAAK,CAAC,wEAAwE,CAAC,CAAC;iBAAE;gBACvH,OAAO,IAAI,CAAC;aACb;;oBA7FFI,cAAS,SAAC;wBACT,QAAQ,EAAE,gBAAgB;qBAC3B;;;;;kCAEEF,UAAK;uCACLA,UAAK;8BACLA,UAAK;uCACLA,UAAK;+BACLA,UAAK;iCACLA,UAAK;gCACLA,UAAK;uCACLA,UAAK;uCACLA,UAAK;2CACLA,UAAK;0CACLA,UAAK;wCACLA,UAAK;qCACLA,UAAK;mCACLA,UAAK;2CACLA,UAAK;qCACLA,UAAK;oCACLA,UAAK;6BACLA,UAAK;oCACLA,UAAK;gCACLC,WAAM;iCACNA,WAAM;oCAKNE,iBAAY,SAAC,OAAO;;mCAvCvB;;;;;;;QCAA;;;0BAAA;QA+EC,CAAA;AA/ED,IAiFA,IAAA;QAAwCC,8CAAW;;;;iCAjFnD;MAiFwC,WAAW,EAWlD,CAAA;;;;;;AC5FD;;;;oBAKCC,aAAQ,SAAC;wBACR,OAAO,EAAE,EAAE;wBACX,OAAO,EAAE,CAAC,oBAAoB,EAAE,oBAAoB,CAAC;wBACrD,YAAY,EAAE,CAAC,oBAAoB,EAAE,oBAAoB,CAAC;wBAC1D,SAAS,EAAE,EAAE;qBACd;;gCAVD;;;;;;;;;;;;;;;;;;;;;;;;;;"}
