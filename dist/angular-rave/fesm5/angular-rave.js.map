{"version":3,"file":"angular-rave.js.map","sources":["ng://angular-rave/lib/angular-rave.component.ts","ng://angular-rave/lib/angular-rave.directive.ts","ng://angular-rave/lib/rave-options.ts","ng://angular-rave/lib/angular-rave.module.ts"],"sourcesContent":["import { Component, OnInit, EventEmitter, Input, Output } from '@angular/core';\nimport { PrivateRaveOptions } from './rave-options';\n\ninterface MyWindow extends Window {\n  getpaidSetup: (raveOptions: Partial<PrivateRaveOptions>) => void;\n}\n\ndeclare var window: MyWindow;\n\n@Component({\n  selector: 'angular-rave',\n  template: `<ng-content></ng-content>`\n})\n\nexport class AngularRaveComponent implements OnInit {\n  @Input() PBFPubKey: string;\n  @Input() integrity_hash: string;\n  @Input() txref: string;\n  @Input() payment_method: string;\n  @Input() amount: number;\n  @Input() currency: string;\n  @Input() country: string;\n  @Input() customer_email: string;\n  @Input() customer_phone: string;\n  @Input() customer_firstname: string;\n  @Input() customer_lastname: string;\n  @Input() subaccount: { id: string, transaction_split_ratio: string }[];\n  @Input() pay_button_text: string;\n  @Input() custom_title: string;\n  @Input() custom_description: string;\n  @Input() redirect_url: string;\n  @Input() custom_logo: string;\n  @Input() meta: any;\n  @Input() raveOptions: Partial<PrivateRaveOptions>;\n  @Output() onclose: EventEmitter<void> = new EventEmitter<void>();\n  @Output() callback: EventEmitter<Object> = new EventEmitter<Object>();\n  private _raveOptions: Partial<PrivateRaveOptions> = {};\n\n  constructor() { }\n\n  pay() {\n    if (typeof window.getpaidSetup !== 'function') {\n      return console.error('ANGULAR-RAVE: Please verify that you imported rave\\'s script into your index.html');\n    }\n    // If the raveoptions Input is present then use it\n    if (this.raveOptions && Object.keys(this.raveOptions).length > 3) {\n      if (this.validateOptions()) {\n        window.getpaidSetup(this.raveOptions);\n      }\n    } else {\n      if (this.validateInput()) {\n        this.insertRaveOptions();\n        window.getpaidSetup(this._raveOptions);\n      }\n    }\n  }\n\n  insertRaveOptions() {\n    if (this.amount) { this._raveOptions.amount = this.amount; }\n    if (this.PBFPubKey) { this._raveOptions.PBFPubKey = this.PBFPubKey; }\n    if (this.payment_method) { this._raveOptions.payment_method = this.payment_method; }\n    if (this.redirect_url) { this._raveOptions.redirect_url = this.redirect_url; }\n    if (this.integrity_hash) { this._raveOptions.integrity_hash = this.integrity_hash; }\n    if (this.pay_button_text) { this._raveOptions.pay_button_text = this.pay_button_text; }\n    if (this.country) { this._raveOptions.country = this.country; }\n    if (this.currency) { this._raveOptions.currency = this.currency; }\n    if (this.custom_description) { this._raveOptions.custom_description = this.custom_description; }\n    if (this.customer_email) { this._raveOptions.customer_email = this.customer_email; }\n    if (this.custom_logo) { this._raveOptions.custom_logo = this.custom_logo; }\n    if (this.custom_title) { this._raveOptions.custom_title = this.custom_title; }\n    if (this.customer_firstname) { this._raveOptions.customer_firstname = this.customer_firstname; }\n    if (this.subaccount) { this._raveOptions.subaccount = this.subaccount; }\n    if (this.customer_lastname) { this._raveOptions.customer_lastname = this.customer_lastname; }\n    if (this.txref) { this._raveOptions.txref = this.txref; }\n    if (this.customer_phone) { this._raveOptions.customer_phone = this.customer_phone; }\n    if (this.onclose) { this._raveOptions.onclose = () => this.onclose.emit(); }\n    if (this.callback) { this._raveOptions.callback = (res) => this.onclose.emit(res); }\n  }\n\n  validateOptions() {\n    if (!this.raveOptions.PBFPubKey) { return console.error('ANGULAR-RAVE: Merchant public key is required'); }\n    if (!(this.raveOptions.customer_email || this.raveOptions.customer_phone)) {\n      return console.error('ANGULAR-RAVE: Customer email or phone number is required');\n    }\n    if (!this.raveOptions.txref) { return console.error('ANGULAR-RAVE: A unique transaction reference is required'); }\n    if (!this.raveOptions.amount) { return console.error('ANGULAR-RAVE: Amount to charge is required'); }\n    if (!this.callback.observers.length) { return console.error('ANGULAR-RAVE: You should attach to callback to verify your transaction'); }\n    if (this.onclose.observers.length) { this.raveOptions.onclose = () => this.onclose.emit(); }\n    this.raveOptions.callback = res => this.callback.emit(res);\n    return true;\n  }\n\n  validateInput() {\n    if (!this.PBFPubKey) { return console.error('ANGULAR-RAVE: Merchant public key is required'); }\n    if (!(this.customer_email || this.customer_phone)) { return console.error('ANGULAR-RAVE: Customer email or phone number is required'); }\n    if (!this.txref) { return console.error('ANGULAR-RAVE: A unique transaction reference is required'); }\n    if (!this.amount) { return console.error('ANGULAR-RAVE: Amount to charge is required'); }\n    if (!this.callback) { return console.error('ANGULAR-RAVE: You should attach to callback to verify your transaction'); }\n    return true;\n  }\n\n  ngOnInit() {\n    this.pay();\n  }\n}\n","import { Directive, Input, Output, HostListener, EventEmitter } from '@angular/core';\n\nimport { PrivateRaveOptions } from './rave-options';\n\ninterface MyWindow extends Window {\n  getpaidSetup: (raveOptions: Partial<PrivateRaveOptions>) => void;\n}\n\ndeclare var window: MyWindow;\n\n@Directive({\n  selector: '[angular-rave]'\n})\nexport class AngularRaveDirective {\n  @Input() PBFPubKey: string;\n  @Input() integrity_hash: string;\n  @Input() txref: string;\n  @Input() payment_method: string;\n  @Input() amount: number;\n  @Input() currency: string;\n  @Input() country: string;\n  @Input() customer_email: string;\n  @Input() customer_phone: string;\n  @Input() customer_firstname: string;\n  @Input() customer_lastname: string;\n  @Input() pay_button_text: string;\n  @Input() custom_title: string;\n  @Input() subaccount: { id: string, transaction_split_ratio: string }[];\n  @Input() custom_description: string;\n  @Input() redirect_url: string;\n  @Input() custom_logo: string;\n  @Input() meta: any;\n  @Input() raveOptions: Partial<PrivateRaveOptions> = {};\n  @Output() onclose: EventEmitter<void> = new EventEmitter<void>();\n  @Output() callback: EventEmitter<any> = new EventEmitter<any>();\n  private _raveOptions: Partial<PrivateRaveOptions> = {};\n\n  constructor() { }\n\n  @HostListener('click')\n  buttonClick() {\n    this.pay();\n  }\n\n  pay() {\n    if (typeof window.getpaidSetup !== 'function') {\n      return console.error('ANGULAR-RAVE: Please verify that you imported rave\\'s script into your index.html');\n    }\n    // If the raveoptions Input is present then use\n    if (this.raveOptions && Object.keys(this.raveOptions).length > 3) {\n      if (this.validateOptions()) {\n        window.getpaidSetup(this.raveOptions);\n      }\n    } else {\n      if (this.validateInput()) {\n        this.insertRaveOptions();\n        window.getpaidSetup(this._raveOptions);\n      }\n    }\n  }\n\n  insertRaveOptions() {\n    if (this.amount) { this._raveOptions.amount = this.amount; }\n    if (this.PBFPubKey) { this._raveOptions.PBFPubKey = this.PBFPubKey; }\n    if (this.payment_method) { this._raveOptions.payment_method = this.payment_method; }\n    if (this.redirect_url) { this._raveOptions.redirect_url = this.redirect_url; }\n    if (this.integrity_hash) { this._raveOptions.integrity_hash = this.integrity_hash; }\n    if (this.pay_button_text) { this._raveOptions.pay_button_text = this.pay_button_text; }\n    if (this.country) { this._raveOptions.country = this.country; }\n    if (this.currency) { this._raveOptions.currency = this.currency; }\n    if (this.custom_description) { this._raveOptions.custom_description = this.custom_description; }\n    if (this.customer_email) { this._raveOptions.customer_email = this.customer_email; }\n    if (this.custom_logo) { this._raveOptions.custom_logo = this.custom_logo; }\n    if (this.custom_title) { this._raveOptions.custom_title = this.custom_title; }\n    if (this.customer_firstname) { this._raveOptions.customer_firstname = this.customer_firstname; }\n    if (this.customer_lastname) { this._raveOptions.customer_lastname = this.customer_lastname; }\n    if (this.subaccount) { this._raveOptions.subaccount = this.subaccount; }\n    if (this.customer_phone) { this._raveOptions.customer_phone = this.customer_phone; }\n    if (this.txref) { this._raveOptions.txref = this.txref; }\n    if (this.onclose) { this._raveOptions.onclose = () => this.onclose.emit(); }\n    if (this.callback) { this._raveOptions.callback = res => this.callback.emit(res); }\n  }\n\n  validateOptions() {\n    if (!this.raveOptions.PBFPubKey) { return console.error('ANGULAR-RAVE: Merchant public key is required'); }\n    if (!(this.raveOptions.customer_email || this.raveOptions.customer_phone)) {\n      return console.error('ANGULAR-RAVE: Customer email or phone number is required');\n    }\n    if (!this.raveOptions.txref) { return console.error('ANGULAR-RAVE: A unique transaction reference is required'); }\n    if (!this.raveOptions.amount) { return console.error('ANGULAR-RAVE: Amount to charge is required'); }\n    if (!this.callback.observers.length) { return console.error('ANGULAR-RAVE: You should attach to callback to verify your transaction'); }\n    if (this.onclose.observers.length) { this.raveOptions.onclose = () => this.onclose.emit(); }\n    this.raveOptions.callback = res => this.callback.emit(res);\n    return true;\n  }\n\n  validateInput() {\n    if (!this.PBFPubKey) { return console.error('ANGULAR-RAVE: Merchant public key is required'); }\n    if (!(this.customer_email || this.customer_phone)) { return console.error('ANGULAR-RAVE: Customer email or phone number is required'); }\n    if (!this.txref) { return console.error('ANGULAR-RAVE: A unique transaction reference is required'); }\n    if (!this.amount) { return console.error('ANGULAR-RAVE: Amount to charge is required'); }\n    if (!this.callback) { return console.error('ANGULAR-RAVE: You should attach to callback to verify your transaction'); }\n    return true;\n  }\n\n}\n","export class RaveOptions {\n  /**\n   * Your merchant public key provided when you create a button\n   */\n  PBFPubKey: string;\n  /**\n   * Email of the customer\n   */\n  customer_email?: string;\n  /**\n   * Firstname of the customer\n   */\n  customer_firstname?: string;\n  /**\n   * firstname of the customer\n   */\n  customer_lastname?: string;\n  /**\n   * Text to be displayed as a short modal description\n   */\n  custom_description?: string;\n  /**\n   * Link to your custom image\n   */\n  custom_logo?: string;\n  /**\n   * Text to be displayed as the title of the payment modal\n   */\n  custom_title?: string;\n  /**\n   * Amount to charge\n   */\n  amount: number;\n  /**\n   * phone number of the customer\n   */\n  customer_phone?: string;\n  /**\n   * URL to redirect to when transaction is completed.\n   */\n  redirect_url?: string;\n  /**\n   * route country. Default NG\n   */\n  country?: string;\n  /**\n   * currency to charge the card in. Default \"NGN\"\n   */\n  currency?: string;\n  /**\n   * This allows you select the payment option you want for your users, possible values are card, account or both\n   */\n  payment_method?: string;\n  /**\n   * Text to be displayed on the Rave Checkout Button\n   */\n  pay_button_text?: string;\n  /**\n   * Unique transaction reference provided by the merchant\n   */\n  txref: string;\n  /**\n   * This is a sha256 hash of your getpaidSetup values, it is used for passing secured values to the payment gateway\n   */\n  integrity_hash?: string;\n  /**\n   * The value to be passed for this is 1. This is useful when customer is using an opera browser, it\n   * would load the payment modal on a new page.\n   */\n  hosted_payment?: 1;\n  /**\n   * Any other custom data you wish to pass.\n   */\n  meta?: any;\n  /**\n   * Subaccounts to split payment with\n   * https://developer.flutterwave.com/v2.0/docs/split-payment\n   */\n  subaccount?: { id: string, transaction_split_ratio: string }[];\n}\n\nexport class PrivateRaveOptions extends RaveOptions {\n  /**\n   * A function to be called on successful card charge. Userâs can always be redirected to a successful or\n   * failed page supplied by the merchant here based on response\n   * @param response?: The server response\n   */\n  callback: (response?: any) => void;\n  /**\n   * A function to be called when the pay modal is closed.\n   */\n  onclose: () => void;\n}\n","import { NgModule } from '@angular/core';\n\nimport { AngularRaveComponent } from './angular-rave.component';\nimport { AngularRaveDirective } from './angular-rave.directive';\n\n@NgModule({\n  imports: [],\n  exports: [AngularRaveComponent, AngularRaveDirective],\n  declarations: [AngularRaveComponent, AngularRaveDirective],\n  providers: [],\n})\nexport class AngularRaveModule { }\n"],"names":["tslib_1.__extends"],"mappings":"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"}
